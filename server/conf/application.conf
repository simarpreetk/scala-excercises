# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="EK[Eu:ha8CEpTMYC<PjXHH9niv21un=:yQkm3QoR@GY7]gKlj^iQNaV`tNNOD6AS"
play.crypto.secret=${?APPLICATION_SECRET}

application.secret="EK[Eu:ha8CEpTMYC<PjXHH9niv21un=:yQkm3QoR@GY7]gKlj^iQNaV`tNNOD6AS"
application.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

play.application.loader=org.scalaexercises.exercises.ExercisesApplicationLoader

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

db.default.driver=org.postgresql.Driver
db.default.url=${?HEROKU_POSTGRESQL_ORANGE_URL}
db.default.url=${?DATABASE_URL}
play.db.prototype.hikaricp.connectionTestQuery=SELECT 1
play.db.prototype.hikaricp.registerMbeans=true

# 15 minutes
play.db.prototype.hikaricp.maxLifetime=900000
# 5 minutes
play.db.prototype.hikaricp.idleTimeout=300000

play.db.prototype.hikaricp.maximumPoolSize=15
play.db.prototype.hikaricp.minimumIdle=5


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled
play.evolutions.db.default.enabled=true
play.evolutions.db.default.autoApply=false
play.evolutions.db.default.autoApplyDowns=false
play.evolutions.db.default.autoApply=${?EVOLUTIONS_AUTO_APPLY}
play.evolutions.db.default.autoApplyDowns=${?EVOLUTIONS_AUTO_APPLY_DOWNS}


# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# SEO Metadata
application.name="Scala Exercises"
application.tagline="The path to enlightenment"
application.description="Scala Exercises is an Open Source project for learning different technologies based in the Scala Programming Language."
application.url="https://www.scala-exercises.org"
application.url=${?APPLICATION_URL}
application.twitter="@scala-exercises"

# GitHub
# ~~~~~~
# Config for GitHub Auth

github.client.id="8d248c88559cffaf6ea5"
github.client.id=${?GITHUB_CLIENT_ID}
github.client.secret="e5194c494a3f96d28a20e9991a519ef567f3958a"
github.client.secret=${?GITHUB_CLIENT_SECRET}
github.site.owner="scala-exercises"
github.site.repo="scala-exercises"

# Loader IO
# ~~~~~~
# Config for Loader IO
loaderio.verificationToken=loaderio-changeme
loaderio.verificationToken=${?LOADERIO_VERIFICATION_TOKEN}

# Evaluator Service
# ~~~~~~

evaluator.url="http://localhost:8080/eval"
evaluator.url=${?EVALUATOR_URL}

evaluator.authKey="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eW91ciBpZGVudGl0eQ.cfH43Wa7k_w1i0W2pQhV1k21t2JqER9lw5EpJcENRMI"
evaluator.authKey=${?EVALUATOR_AUTH_KEY}

# Gitter
# ~~~~~~
# Config for Gitter

gitter.room = "scala-exercises/scala-exercises"

# Exercises
# ~~~~~~~~~

exercises.top_libraries = [ "std_lib", "cats", "shapeless", "doobie", "scalacheck", "fpinscala", "scala_tutorial", "circe", "fetch", "monocle" ]
